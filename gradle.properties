# Project-wide Gradle settings.
# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.
# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx2g
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true
# One of the most important performance features of a compiler is its use of incremental
# compilation. A normal build will recompile all source files in a project, but an incremental build
# will keep track of which files have changed since the last build and only recompile those files
# and the files that depend on them. This can have a huge impact on compile times, especially for
# large projects. Incremental builds were added to Kotlin in version 1.0.2.
# https://stackoverflow.com/a/48860829/582083
kotlin.incremental=true
# The configuration cache is a feature that significantly improves build performance by caching
# the result of the configuration phase and reusing this for subsequent builds. Using the
# configuration cache, Gradle can skip the configuration phase entirely when nothing that affects
# the build configuration, such as build scripts, has changed. Gradle also applies some performance
# improvements to task execution as well.
org.gradle.unsafe.configuration-cache=true
